<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="HelpTopic" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Defining the Data Model">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Step 2 Define Data Sources, Parsers, and Data Source Mappings</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../resources/stylesheets/leidos.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h2 class="Heading2"><a name="kanchor95"></a>Step 2: Define Data Sources, Parsers, and Data Source Mappings </h2>
        <p>Next, use the <b>Data Model Editor</b> to define each data source and to map all the fields in the data sources into your new input model.&#160;Each incoming field must be mapped to and translated into a field in your input model. The goal of this configuration step is to build a normalized data model. This step can take a lot of time, depending on the number of data sources and fields you have to specify.</p>
        <p>For each data source, you will:</p>
        <ul>
            <li value="1">Name the source</li>
            <li value="2">Select the type of parser that will extract the data fields for <span class="VariablesProductName">DigitalEdge</span> input</li>
            <li value="3">Name and specify each incoming data field</li>
            <li value="4">Map each data source field to a field in the input model</li>
            <li value="5">Specify how to translate, process, or convert the data in each incoming field</li>
        </ul>
        <p><a name="kanchor96"></a><span class="VariablesProductName">DigitalEdge</span> parsers accept incoming data in several different formats.  Each parser creates name-value pairs from a specific data source to feed the translation stage of the pipeline.&#160;The translation stage maps the name-value pairs to the input model according to the processing rules that you define.&#160;This model represents normalized data, regardless of the data source.&#160; </p>
        <p>The <b>Data Sources</b> screen lists:</p>
        <ul>
            <li value="1"><b>Field</b>: each field defined in the currently selected input model</li>
            <li value="2"><b>Type</b>: the data type of each input model field</li>
            <li value="3"><b>Translation</b>: a specification for each data source field that will be mapped into an input model field. The translation statement describes how the incoming data will be processed or converted so that it is normalized into the <span class="VariablesProductName">DigitalEdge</span> input format.</li>
        </ul>
        <p class="Indent">
            <img src="../resources/images/configuration/03000011.png" class="large_graphic" />
        </p>
        <p>As you specify each field, the model is built in JSON representation.</p>
        <h3 class="Heading3"><a name="kanchor97"></a>Add a data source and parser to work with</h3>
        <p>First, name a data source as input to <span class="VariablesProductName">DigitalEdge</span> and specify the type of parser to extract data.</p>
        <ol>
            <li value="1">Select the <b>Data Sources</b> tab.</li>
            <li value="2">Click the <b>New</b> icon.&#160;&#160; <img src="../resources/images/configuration/03000012_58x22.png" style="width: 58;height: 22;" class="icon_intext" /></li>
        </ol>
        <p> <![CDATA[ ]]></p>
        <p class="Indent">
            <img src="../resources/images/configuration/03000013.png" class="regular" />
        </p>
        <ol data-mc-continue="true">
            <li value="3">Enter a <b>Data Source Name</b>. The name should represent both the content and the parser type for the data source. For example, IDTrackingCSV or LocationsJPG.</li>
            <li value="4"><a name="kanchor98"></a>Select&#160; the type of parser to use when extracting data from this source by choosing a <b>Parser Format</b> option from the drop-down menu.  (Note that this list includes the parsers that are included in the core release. You may also have custom parsers created for your site.)</li>
            <ul>
                <li value="1"><a name="kanchor99"></a><b>BinaryParser</b>: a user-configurable parser that takes any binary file encoded in Base 64, interprets the file as a string of bytes, and extracts portions of that file as fixed fields which should be saved and ingested</li>
                <li value="2"><a name="kanchor100"></a><b>CEFParser</b>: Common Event Format from ArcSight®, an open standard for logging security-related information in a common event log format </li>
                <li value="3"><a name="kanchor101"></a><b>CsvParser</b>: a frequently used Comma-Separated Values configurable parser to extract delimited plain text </li>
                <li value="4">
                    <p><a name="kanchor102"></a><strong>DNS PCAP</strong>:  parser that reads and extracts DNS packets, prefixed with <span class="VariablesProductName">DigitalEdge</span> data; requires the PcapSnifferTransport in <strong>System Builder</strong></p>
                </li>
                <li value="5"><a name="kanchor103"></a><b>EmailParser</b>: parser that works with the RFC 822 ARPA email text format; RFC 822 specifies the structure of email messages, including attachments, to and from fields, etc.</li>
                <li value="6"><a name="kanchor104"></a><b>EXIFParser</b>: configurable parser that works with the Exchangeable Image File format used for handling image and sound files from digital cameras</li>
                <li value="7"><a name="kanchor105"></a><b>JSONParser</b>: configurable parser extracting data from text formatted in the JavaScript Open Notation standard</li>
                <li value="8"><a name="kanchor106"></a><b>LibpCapParser</b>: parser that works with packet captures in the UNIX Libpcap library</li>
                <li value="9"><a name="kanchor107"></a><strong>LogParser</strong>: parser that reads any log file (including firewall logs) by extracting the timestamp, based on a regex pattern you provide, and the text of the log entry</li>
                <li value="10"><a name="kanchor108"></a><strong>SNMP PCAP</strong>:  parser that reads and extracts SNMPv1 or SNMPv2 packets, prefixed with <span class="VariablesProductName">DigitalEdge</span> data; requires the PcapSnifferTransport in <strong>System Builder</strong></li>
                <li value="11"><a name="kanchor109"></a><strong>Unstructured file</strong>:  beta parser that works with unstructured files such as Word, Excel, and PDFs to extract content and metadata</li>
                <li value="12"><a name="kanchor110"></a><b>XMLParser</b>: configurable parser extracting data from the Extensible Markup Language format</li>
            </ul>
        </ol>
        <ol data-mc-continue="true">
            <li value="5">Click <b>Next</b>.</li>
        </ol>
        <h3 class="Heading3"><a name="kanchor111"></a><a name="_Define_the_fields"></a>Define the fields in a data source</h3>
        <p>Next, name and specify each incoming data source field on the <b>Data Source Field Names</b> dialog box. This is an optional task. If you skip this step, you must enter data source field names when you map data source fields to input model fields (<a href="#Map_fields" class="MCXref xref">See "Map data source fields to the input model"</a>).</p>
        <ol start="1">
            <li value="1">In the <b>Get input fields from delimited text (type or paste text below)</b>:<ol><li value="1">Select the appropriate <b>Delimiter</b> that you are using to separate field names.</li><li value="2">Enter a text string from which the field names can be parsed. Field names cannot include the following characters: single quote ('), double quote ("), or comma (,). For example: ID,Name,Product,Cost</li></ol></li>
        </ol>
        <p class="Indent">
            <img src="../resources/images/configuration/03000014.png" class="regular" />
        </p>
        <ol data-mc-continue="true">
            <li value="2">Click <b>Add </b>to transfer the input fields to the <b>Data Source Fields</b> box.</li>
            <li value="3">Click <b>Next</b>.</li>
            <li value="4" data-mc-conditions=""><a name="kanchor112"></a>Review the list of <b>Parameter</b>s and <b>Current </b><b>Value</b>s.
</li>
        </ol>
        <ul>
            <li value="1" data-mc-conditions="">Double-click on any entry to make corrections.</li>
            <li value="2" data-mc-conditions="">Click <b>Back</b><b>…</b><b>Cancel</b> to discard the specification.</li>
        </ul>
        <ol data-mc-continue="false">
            <li value="5" data-mc-conditions="">Click <b>Finish</b>.</li>
        </ol>
        <p class="Note" data-mc-conditions=""> For details about parser parameters, <a href="parser_parameters.htm" class="MCXref xref">See "Parser parameters"</a>.</p>
        <h3 class="Heading3"><a name="kanchor113"></a><a name="Map_fields"></a>Map data source fields to the input model</h3>
        <p>Next, associate each incoming data field with a field in the <span class="VariablesProductName">DigitalEdge</span> input model and specify how each field should be parsed, converted, formatted, or translated for the normalized model.</p>
        <ol>
            <li value="1">Click to highlight an input model <b>Field</b>. Several Translation buttons appear to help you specify the data <b>Type</b> for a field:</li>
        </ol>
        <p class="Indent">
            <img src="../resources/images/configuration/03000015.png" class="large_graphic" />
        </p>
        <ol data-mc-continue="true">
            <li value="2">Click the appropriate Translation button and enter translation rules:</li>
            <p>
                <img src="../resources/images/configuration/03000016.png" class="large_graphic" />
            </p>
            <ul>
                <li value="1"><b>Get Field</b>: To map data directly from a data source field into the input model without any data manipulation. </li>
                <ol>
                    <li value="1">Enter or select the name of the <b>Source Input Field</b>. Field names cannot include the following characters: single quote ('), double quote ("), or comma (,).</li>
                    <li value="2">Optionally enter a <b>Default Value</b>.</li>
                </ol>
            </ul>
            <ul>
                <li value="1"><b>Get Array</b>: The <b>Get Array</b> translation is most useful with the XML and JSON parsers. Use it to copy <i>all </i>child or repeated elements from a source field into your data model (you cannot get and map child elements individually). For example, in an XML schema, <b>Get Array</b> will copy a sequence of elements into the data model; if you do not use <b>Get Array</b>, only the last element from the sequence will be mapped into your data model.</li>
                <ol>
                    <li value="1">Select the name of the <b>Source Input Field</b>. Field names cannot include the following characters: single quote ('), double quote ("), or comma (,).</li>
                </ol>
                <p class="Note">The <b>Get Array</b> button is only available for a field if you created it on the <b>Input Model</b> tab as an <b>Array</b>; input and output field specifications must match as arrays for input model mapping to succeed.</p>
            </ul>
            <ul>
                <li value="1"><b>Use Constant</b>: To set a specific value for an input model field that is not mapped from an incoming data source field.</li>
                <ol>
                    <li value="1"><b>Enter constant value</b>.</li>
                </ol>
            </ul>
            <ul>
                <li value="1"><b>Convert Date</b>: To convert an incoming date format to the input model’s date format. </li>
                <ol>
                    <li value="1">In the <b>Source Field(s)</b> box, enter the name of the data source field that is a date/time field. Separate multiple field names with +. </li>
                </ol>
                <p class="Indent">OR</p>
                <p class="Indent">From the <b>Copy Field</b> drop-down menu, select Input Field(s) (generated from the list created in step 1 under <a href="#_Define_the_fields"><span class="Hyperlink">Define the fields in this data source</span></a>).</p>
                <ol data-mc-continue="true">
                    <li value="2">In the <b>Input Date Format</b> box, click the Select<b> …</b> button and choose the appropriate date/time format(s) from the available <b>Select a format</b> lists.</li>
                    <li value="3"> Click <b>OK</b>.</li>
                </ol>
            </ul>
            <ul>
                <li value="1"><b>Call Script</b>: To process the incoming data with a custom script. You can use a generalized <span class="VariablesProductName">DigitalEdge</span> script, or you can create your own script and store it in your System Repository. (Use the <b>Management Console</b> &gt; <b>Plug-ins</b> &gt; <b>Scripts </b>&gt; <b>Private Scripts</b> to upload a script to your repository.)</li>
                <p class="Note">When you write a script, the parameters use <strong>Data Source Field</strong> names (incoming fields from originating in the external data source), not input model field names created for the <span class="VariablesProductName">DigitalEdge</span> data model.</p>
            </ul>
        </ol>
        <ol data-mc-continue="true">
            <ul>
                <ol>
                    <li value="1">Select the <b>Script Name</b>. </li>
                    <li value="2">In the <b>Parameters </b>list, double-click in a <b>Data Source Field</b> row and select the incoming data field. Field names cannot include the following characters: single quote ('), double quote ("), or comma (,).</li>
                </ol>
            </ul>
            <li value="3">Click <b>OK</b>. Your new field mapping and translation statement appears in the <b>Data Sources</b> list.</li>
        </ol>
        <h3 class="Heading3">Map array elements to the input model</h3>
        <p>Mapping arrays to the input model follows a different procedure.</p>
        <ol>
            <li value="1">Select an <b>Input Field</b> with <b>Type</b> = <b>ARRAY</b>. Several Translation buttons appear that are specific to array elements: </li>
        </ol>
        <p class="Indent">
            <img src="../resources/images/configuration/03000017.png" class="large_graphic" />
        </p>
        <ol data-mc-continue="true">
            <li value="2">Click <b>Add Element</b>. A new OBJECT or field is added to the selected array as the last element in the list. Placeholder values are added to the new element.</li>
            <li value="3">Select the new OBJECT or field and click a Translation button that is appropriate for the new element’s data type. Follow the steps above for the translation Type you selected.</li>
            <li value="4">Click <b>OK</b>. The new element and translation statement appear in the <b>Data Source Mapping</b> list. </li>
        </ol>
        <p class="Note">You can also remove an element from an array with the <b>Delete Element</b> button.</p>
        <h3 class="Heading3">Edit a source field translation statement</h3>
        <ol>
            <li value="1">Select a source from the drop-down <b>Data Source</b> list. The previously defined field specifications appear.</li>
            <li value="2">Double-click an input model <b>Field</b>.</li>
            <li value="3">Edit the <b>Translation</b> statement following the guidelines above. </li>
        </ol>
        <h3 class="Heading3">Delete a data source</h3>
        <ol>
            <li value="1">Select the source from the drop-down <b>Data Source</b> list.</li>
            <li value="2">Click the <b>Delete</b> icon.&#160;&#160;&#160; <img src="../resources/images/configuration/03000018.png" class="icon_intext" /></li>
            <li value="3">Click <b>OK</b>.</li>
        </ol>
        <h3 class="Heading3">Save your work</h3>
        <ol>
            <li value="1">Click the <b>Save</b> icon on the <b>Data Model Editor</b> title bar.&#160;&#160; <img src="../resources/images/configuration/03000010_16x16.png" style="width: 16;height: 16;" /></li>
            <li value="2">To log out of the Data Model Editor, click your user icon/name in the upper right corner. Select <b>Sign Out</b>.</li>
        </ol>
        <p>You can save a partially edited session and return to the <b>Data Model Editor</b> later to continue your configuration work.</p>
        <p data-mc-conditions="Default.ScreenOnly"> <![CDATA[ ]]></p>
        <p class="HeadingLevel3NonTOC" data-mc-conditions="Default.ScreenOnly">Next step:</p>
        <p data-mc-conditions="Default.ScreenOnly"><a href="about_dimension_table_enrichments.htm" class="ParaTextOnly MCXref xref xrefParaTextOnly">About dimension table enrichments</a>
        </p>
        <p data-mc-conditions="Default.ScreenOnly"> <![CDATA[ ]]></p>
        <p class="HeadingLevel3NonTOC" data-mc-conditions="Default.ScreenOnly">Related topics:</p>
        <p data-mc-conditions="Default.ScreenOnly"><a href="parser_parameters.htm" class="ParaTextOnly MCXref xref xrefParaTextOnly">Parser parameters</a>
        </p>
        <p class="Front">&#160;</p>
        <p class="Front">&#160;</p>
        <p class="FooterNonPrint">For  Technical Support, contact: <span class="VariablesEmail">DigitalEdgeSupport@Leidos.com</span></p>
        <p class="FooterNonPrint">To submit ideas or feedback, go to https://www9.v1ideas.com/digitaledge/welcome</p>
        <p class="FooterNonPrint">© <span class="VariablesCompanyName">Leidos</span>. All rights reserved</p>
    </body>
</html>