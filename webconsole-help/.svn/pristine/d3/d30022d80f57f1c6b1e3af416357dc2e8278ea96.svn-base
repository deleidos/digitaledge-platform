<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="HelpTopic" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Getting Data into the System">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Getting unstructured data in</title>
        <link href="../resources/tablestyles/basic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../resources/stylesheets/leidos.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h2 class="Heading2">Getting unstructured data in</h2>
        <p><span class="VariablesProductName">DigitalEdge</span> is equally proficient at ingesting and processing unstructured data as well as structured data. A data model does not have to be overly complex and extensive to be effective. Unstructured data such as email messages, Word documents, and PDFs can be captured and available for searching and analysis with or without extracting properties and metadata. </p>
        <p>Use the following procedures when you need to:</p>
        <ul>
            <li value="1">Create a quick prototype of a new system without specifying a complete set of input fields</li>
            <li value="2">Create a simple system for data discovery, so you can evaluate record content that you are not yet familiar with </li>
            <li value="3">
                <p>Index and search unstructured data that is not fielded and/or contains metadata inside a complex file structure</p>
            </li>
        </ul>
        <p>Here are the plug-in components that you will use to build a simple unstructured data system:</p>
        <ul>
            <li value="1">A data model that includes just 2 fields</li>
            <li value="2">Unstructured File Parser, to extract and handle data in the following formats:</li>
            <p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../resources/tablestyles/basic.css');" class="TableStyle-Basic" cellspacing="0">
                    <col style="width: 3in;" class="TableStyle-Basic-Column-Column1" />
                    <col style="width: 3in;" class="TableStyle-Basic-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-Basic-Head-Header1">
                            <th colspan="2" class="TableStyle-Basic-HeadD-Column1-Header1">Unstructured File Parser: Formats Handled</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">HTML</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">MBOX</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">PDF</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">ODF</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">RTF</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">EPUB</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">TXT</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">Audio</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">XML and derived formats</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">Video</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">Microsoft Office documents</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">&#160;</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyB-Column1-Body1">Java class files and archives</td>
                            <td class="TableStyle-Basic-BodyA-Column1-Body1">&#160;</td>
                        </tr>
                    </tbody>
                </table>
            </p>
            <li value="3">Lucene Data Sink: for indexing and searching the data</li>
            <li value="4">Directory Crawler Transport: to ingest local files; the transport behaves recursively, searching through all subfolders in the specified directory; the transport also handles compressed files:</li>
            <p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../resources/tablestyles/basic.css');" class="TableStyle-Basic" cellspacing="0">
                    <col style="width: 3in;" class="TableStyle-Basic-Column-Column1" />
                    <col style="width: 3in;" class="TableStyle-Basic-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-Basic-Head-Header1">
                            <th colspan="2" class="TableStyle-Basic-HeadD-Column1-Header1">Directory Crawler Transport: Compressed File Formats Supported</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">Zip (*.zip)</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">7-Zip (*.7z)</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">Tar (*.tar)</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">RAR (*.rar)</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyE-Column1-Body1">Tar-Gzip (*tar.gz, *.tgz)</td>
                            <td class="TableStyle-Basic-BodyD-Column1-Body1">Tar-Bzip2 (*.tbz2)</td>
                        </tr>
                        <tr class="TableStyle-Basic-Body-Body1">
                            <td class="TableStyle-Basic-BodyB-Column1-Body1">Gzip (*.gz)</td>
                            <td class="TableStyle-Basic-BodyA-Column1-Body1">Bzip2 (*.bz2)</td>
                        </tr>
                    </tbody>
                </table>
            </p>
            <li value="5">Search API webapp: to do federated searches</li>
            <li value="6">Search webapp: to do quick searches in a GUI</li>
        </ul>
        <h3 class="Heading3">Build the system</h3>
        <p>The strategy for building a simple prototype system for unstructured data is to extract all the source file content and metadata, and to process it all into just one or a few <span class="VariablesProductName">DigitalEdge</span> fields for output. </p>
        <ol>
            <li value="1">In the <strong>Data Model Editor</strong>, create a data model that includes two string type fields: content and filename.</li>
            <li value="2">When you define your data source, select the <strong>UnstructuredFileParser</strong>. This parser can split the unstructured data into as many or as few fields as you need.<ol style="list-style-type: lower-alpha;"><li value="1"> Initially, don't define any input fields for the parser.</li><li value="2">Accept the defaults for field mapping.</li><li value="3">For the extracted-content-length parameter, start with the default value of 250 MB. This parameter applies to text only and does not affect embedded graphics.</li><li value="4">The parser will automatically preserve the filenames of the incoming data source files.</li></ol></li>
        </ol>
        <ol data-mc-continue="true">
            <li value="3">In <strong>System Builder</strong>, select the <strong>DirectoryCrawlerTransportService</strong>. <ol style="list-style-type: lower-alpha;"><li value="1">Create file mappings with the map-input-models parameter. </li><li value="2">Set the transport's content-encoding parameter to <code>Base64</code>.</li><li value="3">Set the record-format parameter to <code>NULL</code>. </li></ol></li>
        </ol>
        <ol data-mc-continue="true">
            <li value="4">In <strong>System Builder</strong>, select the <strong>LuceneIndexingDataSink</strong> and accept all its default parameter values to start with.</li>
            <li value="5"> In <strong>System Builder</strong>, select the following webapps/REST APIs:<ol style="list-style-type: lower-alpha;"><li value="1"><strong>search</strong>: for a simple query interface</li><li value="2"><strong>searchapi</strong>: to perform federated queries</li></ol></li>
        </ol>
        <ol data-mc-continue="true">
            <li value="6"><strong>Build </strong>the system </li>
        </ol>
        <h3 class="Heading3">Search the records for support in data discovery</h3>
        <p>Once the system is built and the data is indexed in the Lucene data sink, you can examine and explore the unstructured data for patterns, potential metadata, and key content.</p>
        <ol>
            <li value="1">In the <strong>Management Console</strong>, <strong>Start </strong>your system.</li>
            <li value="2">When the system status is <strong>OK</strong>, select the system and look at the <strong>Process Groups</strong> tab in the bottom panel. <ol style="list-style-type: lower-alpha;"><li value="1">Double-click the <strong>webapps.main</strong> group. This is the instance where your search apps run. </li><li value="2">Get the <strong>Public IP</strong> address for the search interface.</li><li value="3">Open the IP in a browser to access the search interface. </li><li value="4">The <strong>JSON Record</strong> representation shows the content for each unstructured record. Click <strong>More </strong>to see the full record. </li><li value="5">Use this as a first step in your data discovery process to decide if you want to extract, define, and index content fields. </li><li value="6">Search for any key content that you are looking for. </li></ol></li>
        </ol>
        <h3 class="Heading3">Mine the log files</h3>
        <p>Next, consider examining the ingest log files to discover potential metadata fields for indexing. </p>
        <ol>
            <li value="1">In the <strong>Management Console</strong>, select your system and click the View Logs icon <img src="../resources/images/operations/view_logs.png" class="icon_intext" />.</li>
            <li value="2">Expand<strong> ingest.all</strong> and examine the numbered log file(s).</li>
            <li value="3">Scan through the file for any <strong>Detected Metadata Key</strong> that may be a useful property from Office or PDF documents. </li>
            <li value="4">You can then refine your data model in the <strong>Data Model Editor</strong> by doing a <strong>Get Field</strong> on any property that should be added to your input model for indexing. </li>
        </ol>
        <h3 class="Heading3">For more detailed information</h3>
        <p><i>Configuration Guide</i> - data modeling and system building</p>
        <p><i>Operations Guide</i> - indexing and searching, managing systems</p>
        <p class="Front">&#160;</p>
        <p class="Front">&#160;</p>
        <p class="FooterNonPrint">For  Technical Support, contact: <span class="VariablesEmail">DigitalEdgeSupport@Leidos.com</span></p>
        <p class="FooterNonPrint">To submit ideas or feedback, go to https://www9.v1ideas.com/digitaledge/welcome</p>
        <p class="FooterNonPrint">© <span class="VariablesCompanyName">Leidos</span>. All rights reserved</p>
    </body>
</html>