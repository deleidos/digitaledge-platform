<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="HelpTopic" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Sample Code">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Sample alerts code</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../resources/stylesheets/leidos_sdk.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h2 class="Heading2">AlertsApiUserRestClient.java</h2><pre xml:space="preserve">
package &lt;your package&gt;;

import javax.ws.rs.core.MediaType;
import net.sf.json.JSONObject;
import org.apache.commons.configuration.ConversionException;
import org.apache.log4j.Logger;
import com.deleidos.rtws.commons.config.RtwsConfig;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.representation.Form;

public class AlertsApiUserRestClient {
	private Logger logger = Logger.getLogger(AlertsApiUserRestClient.class);
	private static Client REST_CLIENT_INSTANCE;
	private static String ALERTSAPI_BASE_URL;
	
	public AlertsApiUserRestClient () {
		if (ALERTSAPI_BASE_URL == null) {
			// Set the url of the Alerts API so the REST call knows where the API is
			try {
				RtwsConfig conf = RtwsConfig.getInstance();
				ALERTSAPI_BASE_URL = conf.getString("webapp.alertsapi.url.path");
			} catch (ConversionException e) {
				logger.fatal("Load property [webapp.alertsapi.url.path] failed. Message: " + 
					e.getMessage());
			}
		}
		configureClient();
	}
		
	private void configureClient() {
		ClientConfig config = new DefaultClientConfig();
		config.getProperties().put(ClientConfig.PROPERTY_CONNECT_TIMEOUT, 10000);
		config.getProperties().put(ClientConfig.PROPERTY_READ_TIMEOUT, 30000);
		
		REST_CLIENT_INSTANCE = Client.create(config);
	}
	
	public Client getClient() {
		return REST_CLIENT_INSTANCE;
	}
		
	public String[] getEmailList(String username) throws RestClientException {
		// Create the resource to access the REST Service based on the Alerts API url
		// and REST Service path
		WebResource resource = getClient().resource(ALERTSAPI_BASE_URL);
		resource = resource.path("user/retrieve/email").path(username);

		// Execute the rest call
		String response = resource.get(String.class);

		// Process the results of getting the email List as a comma separated String of emails		
		String[] emailList = response.split(",");
		for(int i = 0; i &lt; emailList.length; i++) {
			emailList[i] = emailList[i].trim();
		}

		return emailList;
	}
	
	public void updateEmailList(String username, String emailList) throws RestClientException {
		// Create the resource to access the REST Service based on the Alerts API url
		// and REST Service path
		WebResource resource = getClient().resource(ALERTSAPI_BASE_URL);
		resource = resource.path("user/update/email").path(username);
		
		Form f = new Form();
		f.add("emailList", emailList);


		// Execute the rest call
		String response = resource.type(MediaType.APPLICATION_FORM_URLENCODED_TYPE)
				.put(String.class, f);

		// Process if the response was a success
		JSONObject jsonResponse = JSONObject.fromObject(response);
		JSONObject standardHeader = jsonResponse.getJSONObject("standardHeader");
		if (standardHeader.getInt("code") != 200) {
			String message = jsonResponse.getString("responseBody");
			throw new RestClientException(message);
		}	

	}
}</pre>
        <p class="Front">&#160;</p>
        <p class="Front">&#160;</p>
        <p class="FooterNonPrint">For  Technical Support, contact: <span class="VariablesEmail">DigitalEdgeSupport@Leidos.com</span></p>
        <p class="FooterNonPrint">To submit ideas or feedback, go to https://www9.v1ideas.com/digitaledge/welcome</p>
        <p class="FooterNonPrint">Â© <span class="VariablesCompanyName">Leidos</span>. All rights reserved</p>
    </body>
</html>