<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:rtws="com.deleidos.rtws.commons.view.component.*">
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<s:Scroller width="100%" height="100%">
		<s:DataGroup width="100%" dataProvider="{dataProvider}" styleName="striped">
			<s:layout>
				<s:VerticalLayout gap="0" />
			</s:layout>
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer width="100%" doubleClickEnabled="true" doubleClick="onDoubleClick();">
						<s:states>
							<s:State name="normal" />
							<s:State name="hovered" />
						</s:states>
						
						<s:layout>
							<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle" paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5" />
						</s:layout>
						
						<mx:ColorPicker selectedColor="{_selectedColor}" change="onColorPickerChange(event);" />
						<s:Label width="100%" text="{_alertDisplayText}" toolTip="{_alertTooltip}"
										 styleName="{_alertDisplayTextStyleName}"
										 maxDisplayedLines="1" lineBreak="toFit" />
						<rtws:StyleableImage styleName="smallIcon remove" toolTip="Unsubscribe from this Alerting Rule"
																 buttonMode="true" click="onDeleteClick();" />
						
						<fx:Script>
							<![CDATA[
								import com.deleidos.rtws.alertviz.events.WatchListCommandEvent;
								import com.deleidos.rtws.alertviz.models.WatchListEntry;
								
								import mx.events.ColorPickerEvent;
								import mx.events.PropertyChangeEvent;
								import mx.events.PropertyChangeEventKind;
								
								private var _watchListEntry:WatchListEntry = null;
								[Bindable] private var _alertDisplayTextStyleName:String = "";
								[Bindable] private var _alertDisplayText:String = "";
								[Bindable] private var _alertTooltip:String = "";
								[Bindable] private var _selectedColor:uint = 0xFFFFFF;
								
								override public function set data(value:Object):void {
									super.data = value;
									
									if(data != null && data is WatchListEntry) {
										_watchListEntry = (data as WatchListEntry);
										if(_watchListEntry.alertTracking) {
											_alertDisplayTextStyleName = "followSubscription";
										}
										else {
											_alertDisplayTextStyleName = "";
										}
										_alertDisplayText = _watchListEntry.alertDefName;
										_alertTooltip = _watchListEntry.alertDefName + (_watchListEntry.alertTracking ? " (Following)" : "");
										_selectedColor = _watchListEntry.alertColor;
									}
									else {
										_watchListEntry = null;
										_alertDisplayTextStyleName = "";
										_alertDisplayText = "";
										_alertTooltip = "";
										_selectedColor = 0xFFFFFF;
									}
								}
								
								private function onDoubleClick():void {
									if(_watchListEntry != null) {
										dispatchEvent(new WatchListCommandEvent((_watchListEntry.alertTracking ? WatchListCommandEvent.TRACK_OFF_REQUEST : WatchListCommandEvent.TRACK_ON_REQUEST),
											{filterKey: _watchListEntry.alertDefKey}, true));
									}
								}
								
								private function onColorPickerChange(event:ColorPickerEvent):void
								{
									if(_watchListEntry != null) {
										var eventToDispatch:PropertyChangeEvent = new PropertyChangeEvent(
											PropertyChangeEvent.PROPERTY_CHANGE, true, false,
											PropertyChangeEventKind.UPDATE, "alertColor",
											_watchListEntry.alertColor, event.color, _watchListEntry);
										dispatchEvent(eventToDispatch);
									}
								}
								
								private function onDeleteClick():void {
									if(_watchListEntry != null) {
										dispatchEvent(new WatchListCommandEvent(WatchListCommandEvent.REMOVE, {key: _watchListEntry.alertDefKey}, true));
									}
								}
							]]>
						</fx:Script>
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
	</s:Scroller>
	
	<fx:Script>
		<![CDATA[
			import com.deleidos.rtws.alertviz.models.WatchListEntry;
			
			import mx.collections.ArrayCollection;
			
			[Bindable] public var dataProvider:ArrayCollection = new ArrayCollection();
		]]>
	</fx:Script>
</s:Group>