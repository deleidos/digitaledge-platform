<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="HelpTopic" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Fine-tuning the Configuration">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>System building best practices</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../resources/stylesheets/leidos.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h2 class="Heading2"><a name="kanchor111"></a>System building best practices</h2>
        <p>Building a <span class="VariablesProductName">DigitalEdge</span> system is both an art and a science. There are no hard and fast rules for sizing your system; the many variables do not fit neatly into a spreadsheet or a list of rules. However,  if you follow these best practices for iteratively sizing, auto-scaling, and fine-tuning, the result will be an efficient and high performance system.</p>
        <ul>
            <li value="1">
                <p>Start by being conservative with  the min/max number of instances for the process groups in the system. By using the <span class="VariablesProductName">DigitalEdge</span> auto-scaling feature, the minimum number of instances for a particular process group (ingest.all and datasink.X) should match the number of jms.(external/internal) instances.  The max number of process group instances for the ingest.all, datasink.X groups should be adjusted based on the expected throughput of the pipeline.  For example, while iterating on the data model, if you notice the parse queue depth is steadily increasing, that could be a sign that the system could use more ingest.all process group instances.  It could also mean that data model processing may not be performing very well given the data, or that one or more aspects of the data model processing (parsing/enriching) could be improved.  In the latter case, the detail view in <strong>System Monitor</strong> show you  the throughput of the ingest.all process group instances at the data model processing level, helping you identify hot spots in the processing.  If you notice that the data sink queue(s) are steadily increasing, that could mean that the data sink subsystem may not be sized properly.  You could either add more datasink.X process group instances, or nodes in the cluster(s) they write to (Cassandra, Hadoop, MongoDB, etc.).  There isn’t a one-size-fits-all when it comes to system sizing, so observation and iteration are key in achieving the ideal configuration for your workload.</p>
            </li>
            <li value="2">
                <p>Care must be given to the maximum number of instances a system uses.  In addition, when using the <span class="VariablesProductName">DigitalEdge</span> auto-scaling feature,  the maximum number of process group instances for the system may exceed the messaging subsystem’s optimal throughput capacity (depending on system size).  Therefore, if you are building a small auto-scaling system, and the system most likely will scale up to 20 or more process group instances for both the ingest.all and datasink.X groups, you should change the size of the system to medium or larger.</p>
            </li>
            <li value="3">
                <p>When selecting a data sink which uses a cluster technology (such as Cassandra or Hadoop), the additional process groups supporting those technologies should be sized appropriately for the workload.  If they are undersized, the overall throughput of the system will be affected.</p>
            </li>
        </ul>
        <p data-mc-conditions="Default.ScreenOnly">&#160;</p>
        <p class="HeadingLevel3NonTOC" data-mc-conditions="Default.ScreenOnly">Related topics</p>
        <p data-mc-conditions="Default.ScreenOnly"><a href="../configuration/process_group_parameters.htm"><a href="../configuration/process_group_parameters.htm" class="ParaTextOnly MCXref xref xrefParaTextOnly">Process group parameters</a></a>
        </p>
        <p data-mc-conditions="Default.ScreenOnly"><a href="finetune_autoscaling.htm"><a href="finetune_autoscaling.htm" class="ParaTextOnly MCXref xref xrefParaTextOnly">Fine-tuning auto-scaling</a></a>
        </p>
        <p class="Front">&#160;</p>
        <p class="Front">&#160;</p>
        <p class="FooterNonPrint">For  Technical Support, contact: <span class="VariablesEmail">DigitalEdgeSupport@Leidos.com</span></p>
        <p class="FooterNonPrint">To submit ideas or feedback, go to https://www9.v1ideas.com/digitaledge/welcome</p>
        <p class="FooterNonPrint">© <span class="VariablesCompanyName">Leidos</span>. All rights reserved</p>
    </body>
</html>