---
# Perform a graceful shutdown of the process group container.
- hosts: all
  vars:
    rtws_home: /usr/local/rtws
    rtws_release: "{{ lookup('env','RTWS_RELEASE') }}"
    rtws_release_path: /mnt/appfs
    rtws_system: "{{ lookup('env','RTWS_APPLIANCE_SYSTEM') }}"
    rtws_process_group: "{{ lookup('env','RTWS_PROCESS_GROUP') }}"
    rtws_domain: "{{ lookup('env','RTWS_DOMAIN') }}"
    rtws_fqdn: "{{ lookup('env','RTWS_FQDN') }}"
    rtws_stop: " {{ lookup('env','RTWS_SHUTDOWN') }}"
    cert_dir: /tmp/certs
    rtws_container_max_memory: "{{ lookup('env','RTWS_CONTAINER_MAX_MEMORY') }}"
    aws_marketplace_p: "{{ lookup('env', 'AWS_MARKETPLACE_P') }}"
    
  pre_tasks:
    # The lookup function returns an empty string which evaluates to False in Python, thus the
    # trick below works to validate environment provided variables
    - fail: msg="ERROR. RTWS_RELEASE is required."
      when: not rtws_release
      
    - fail: msg="ERROR. RTWS_PROCESS_GROUP is required."
      when: not rtws_process_group

    - fail: msg="ERROR. RTWS_DOMAIN is required."
      when: not rtws_domain
      
    - fail: msg="ERROR. RTWS_FQDN is required."
      when: not rtws_fqdn
      
    - fail: msg="ERROR. RTWS_APPLIANCE_SYSTEM is required."
      when: not rtws_system 
      
  roles:  
  # Graceful shutdown roles
  - { role: transport-shutdown, when: rtws_stop == true and rtws_process_group == 'transport', tags: "shutdown" }
  - { role: ingest-shutdown, when: rtws_stop == true and rtws_process_group == 'ingest.all' or or 'datasink.' in rtws_process_group, tags: "shutdown" }
  - { role: jms-shutdown, when: rtws_stop == true and rtws_process_group == 'jms.external' or rtws_stop == true and rtws_process_group == 'jms.internal' , tags: "shutdown" }
  - { role: custom-pg-shutdown, when: "'custom.' in rtws_process_group", tags: "shutdown" }