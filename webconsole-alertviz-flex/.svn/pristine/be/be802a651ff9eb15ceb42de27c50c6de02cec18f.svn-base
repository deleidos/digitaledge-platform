<?xml version="1.0" encoding="utf-8"?>
<rtws:ResizableTitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:rtws="com.deleidos.rtws.commons.view.component.*"
	width="675" height="451" 
	verticalScrollPolicy="auto"
	title="Create Alert Criteria">
	
	<fx:Declarations>
		<fx:Array id="validators">
			<mx:StringValidator id="alertNameValidator" 
							source="{alertNameTextInput}" 
							property="text"
							trigger="{createButton}"
							requiredFieldError="Alert Name is required" />
		
			<mx:StringValidator id="alertDescValidator" 
							source="{alertDescTextInput}" 
							property="text"
							trigger="{createButton}"
							requiredFieldError="Alert Description is required" />
		
			<mx:StringValidator id="alertDefValidator" 
							source="{alertDefTextInput}" 
							property="text"
							trigger="{createButton}"
							requiredFieldError="Alert Definition is required" />			
		</fx:Array>
	</fx:Declarations>
	
		<s:Form id="alertDefForm" width="100%" height="100%">
			<s:FormItem label="Alert Name" width="100%">
				<s:TextInput id="alertNameTextInput" width="100%" change="alertNameValidator.validate()"/>
			</s:FormItem>
			<s:FormItem label="Alert Model" width="100%">
				<s:DropDownList id="alertModelTextInput" width="100%" requireSelection="true" change="modelChange()">
					<mx:ArrayCollection id="array"/>
				</s:DropDownList>
			</s:FormItem>
			<s:FormItem label="Alert Description" width="100%">
				<s:TextInput id="alertDescTextInput" width="100%" change="alertDescValidator.validate()"/>
			</s:FormItem>
			<s:FormItem width="100%" height="100%" label="Alert Definitions">
				<s:TextInput id="alertDefTextInput" width="100%" height="0"/>
				<s:Scroller width="100%" height="100%">
					<s:DataGroup id="dataGroup" width="100%" height="100%" styleName="striped">
						<s:layout>
							<s:VerticalLayout gap="0" />
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:ItemRenderer width="100%" doubleClickEnabled="true" doubleClick="handleEditButton(data as AlertDefinition);">
									<s:states>
										<s:State name="normal" />
										<s:State name="hovered" />
									</s:states>
									
									<s:layout>
										<s:HorizontalLayout horizontalAlign="left" verticalAlign="middle" paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5" />
									</s:layout>
									
									<s:Label width="100%" text="{data.field} {data.operator} {data.value}" toolTip="{data.field} {data.operator} {data.value}" maxDisplayedLines="1" lineBreak="toFit" />
									
									<rtws:StyleableImage id="editButton" styleName="smallIcon edit" toolTip="Edit this Alert Definition" buttonMode="true" click="handleEditButton(data as AlertDefinition)" />
									<rtws:StyleableImage id="removeButton" styleName="smallIcon remove" toolTip="Remove this Alert Definition" buttonMode="true" click="handleRemoveButton(data as AlertDefinition)" />
									<fx:Script>
										<![CDATA[
											import com.deleidos.rtws.alertviz.events.AlertCriteriaCommandEvent;
											import com.deleidos.rtws.alertviz.models.AlertDefinition;
											
											protected function handleEditButton(data:AlertDefinition):void
											{
												outerDocument.dispatchEvent(new AlertCriteriaCommandEvent(AlertCriteriaCommandEvent.EDIT_DEF, data, true));
											}
											
											protected function handleRemoveButton(data:AlertDefinition):void
											{
												outerDocument.dispatchEvent(new AlertCriteriaCommandEvent(AlertCriteriaCommandEvent.REMOVE_DEF, data, true));
											}
										]]>
									</fx:Script>
								</s:ItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:DataGroup>			
				</s:Scroller>
				<s:Button id="addDefButton" label="Add Definition" enabled="false"/>
			</s:FormItem>
		</s:Form>
	
	<rtws:controlBarContent>
		<s:Button id="createButton" label="CREATE" enabled="true" />
		<s:Button id="cancelButton" label="CANCEL" enabled="true" />
	</rtws:controlBarContent>
	
	<fx:Script>
		<![CDATA[
			import com.deleidos.rtws.alertviz.events.AlertCriteriaCommandEvent;
			
			import mx.collections.ArrayCollection;
			
			
			
			protected function modelChange():void
			{
				dispatchEvent(new AlertCriteriaCommandEvent(AlertCriteriaCommandEvent.CHANGE_MODEL, true));
			}
		]]>
	</fx:Script>	
</rtws:ResizableTitleWindow>
