<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 horizontalAlign="center" verticalAlign="middle"
		 creationComplete="init();">	
	
	<mx:Panel id="popup"/>
	
	<fx:Script>
		 <![CDATA[
			 import com.deleidos.rtws.alertviz.expandgraph.events.PopupEvent;
			 
			 import mx.containers.TitleWindow;
			 import mx.containers.VBox;
			 import mx.controls.Button;
			 import mx.controls.Label;
			 import mx.controls.TextInput;
			 import mx.events.CloseEvent;
			 import mx.events.ResizeEvent;
			 
			 private var getValue:Function;
			 private var _init:Boolean = false;
			 private var _settings:Object;
			 
			 private function init():void{
				 _init = true;
				 settings = _settings;
			 }
			 
			 public function set settings(settings:Object):void{
				 _settings = settings;
				 if(!_init || settings == null) return;
				 
				 popup.removeAllElements();
				 
				 popup.title = settings.title == null ? "" : settings.title;
				 if(settings.style == "INPUT"){
					 var inputVBox:VBox = new VBox();
					 inputVBox.left = 10;
					 inputVBox.top = 10;
					 inputVBox.right = 10;
					 inputVBox.bottom = 10;
					 inputVBox.percentWidth = 100;
					 inputVBox.percentHeight = 100;
					 
					 var inputMessage:Label = settings.message == null ? null : new Label();
					 if(inputMessage != null) {
						 inputMessage.text = settings.message;
						 inputMessage.percentWidth = 100;
					 }
					 
					 var input:TextInput = new TextInput();
					 input.percentWidth = 100;
					 if(settings.defaultInput != null) {
						 input.text = settings.defaultInput;
					 }
					 
					 var inputHBox:HBox = new HBox();
					 var okButton:Button = new Button();
					 okButton.label = "Ok";
					 okButton.percentWidth = 50;
					 okButton.addEventListener(MouseEvent.CLICK, onFinish);
					 
					 var cancelButton:Button = new Button();
					 cancelButton.label = "Cancel";
					 cancelButton.percentWidth = 50;
					 cancelButton.addEventListener(MouseEvent.CLICK, onCancel);
					 
					 inputHBox.addElement(okButton);
					 inputHBox.addElement(cancelButton);
					 inputHBox.percentWidth = 100;
					 
					 if(inputMessage != null) {
						 inputVBox.addElement(inputMessage);
					 }
					 
					 inputVBox.addElement(input);
					 inputVBox.addElement(inputHBox);
					 
					 popup.addElement(inputVBox);
					 getValue = function anon():String{ return input.text; };
				 } else if(settings.style == "CONFIRM"){
					 var confirmVBox:VBox = new VBox();
					 confirmVBox.left = 10;
					 confirmVBox.top = 10;
					 confirmVBox.right = 10;
					 confirmVBox.bottom = 10;
					 confirmVBox.percentWidth = 100;
					 confirmVBox.percentHeight = 100;
					 
					 var confirmMessage:Label = settings.message == null ? null : new Label();
					 if(confirmMessage != null){
						 confirmMessage.text = settings.message;
						 confirmMessage.percentWidth = 100;
					 }
					 
					 var confirmHBox:HBox = new HBox();
					 var yesButton:Button = new Button();
					 yesButton.label = "Yes";
					 yesButton.percentWidth = 50;
					 yesButton.addEventListener(MouseEvent.CLICK, onFinish);
					 
					 var noButton:Button = new Button();
					 noButton.label = "No";
					 noButton.percentWidth = 50;
					 noButton.addEventListener(MouseEvent.CLICK, onCancel);
					 
					 confirmHBox.addElement(yesButton);
					 confirmHBox.addElement(noButton);
					 confirmHBox.percentWidth = 100;
					 
					 if(confirmMessage != null) {
						 confirmVBox.addElement(confirmMessage);
					 }
					 
					 confirmVBox.addElement(confirmHBox);
					 
					 popup.addElement(confirmVBox);
					 getValue = function anon():String{ return null; };
				 }
				 
				 this.addEventListener(KeyboardEvent.KEY_UP, handleKeyboardEvent);
				 this.dispatchEvent(new PopupEvent(PopupEvent.SETUP_COMPLETE));
			 }
			 
			 protected function onFinish( event:MouseEvent ):void{
				 this.dispatchEvent(new PopupEvent(PopupEvent.SUCCESS, getValue()));
				 this.dispatchEvent(new PopupEvent(PopupEvent.DONE));
			 }
			 
			 protected function onCancel( event:MouseEvent ):void{
				 this.dispatchEvent(new PopupEvent(PopupEvent.CANCEL));
				 this.dispatchEvent(new PopupEvent(PopupEvent.DONE));
			 }
			 
			 protected function handleKeyboardEvent( event:KeyboardEvent ):void{
				 if(event.keyCode == Keyboard.ENTER) //enter acts as "ok"
					 onFinish(null);
				 else if(event.keyCode == Keyboard.ESCAPE) //escape acts as "cancel"
					 onCancel(null);
			 }
		 ]]>
	 </fx:Script>
</mx:HBox>
