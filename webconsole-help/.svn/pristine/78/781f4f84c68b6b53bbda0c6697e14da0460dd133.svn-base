<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="HelpTopic" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Creating a Filter Definition</title>
        <link href="../resources/tablestyles/basic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../resources/stylesheets/leidos_sdk.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1 class="Heading1">Creating a Filter Definition</h1>
        <p>A filter definition defines the conditions and values that trigger an alert. The definition is dependent on the data model that you use in the filter; the fields in the definition must match fields in the filter's data model. All of the following examples  are based on the rectangle data model:</p>
        <p class="Indent"><code>{"dimensions":{"width":&lt;Int&gt;,"height":&lt;Int&gt;},"color":"&lt;String&gt;"}</code>
        </p>
        <h2 class="Heading2">Syntax</h2>
        <p>The examples in this API use a rectangle data model:</p>
        <p class="Indent"><code>{"dimensions":{"width":&lt;Int&gt;,"height":&lt;Int&gt;},"color":"&lt;String&gt;"}</code>
        </p>
        <p>where variables in angled brackets &lt; &gt; should be replaced with actual values.</p>
        <p>To create a valid definition, you must first understand the syntax. Definitions are written in JSON format. This format does not have to exactly match the format of the data model being used, but the fields in the definition must be actual fields in the data model. For example, a trigger that alerts on a rectangle with a height of 6 would be defined as:</p>
        <p class="Indent"><code>{"dimensions":{"height":"=6"}}</code>
        </p>
        <p>Notice that not all the fields are included, only the one that will trigger the alert.</p>
        <p>Notice the notation used to declare the trigger expression (the field <code>"=6"</code>). Not only do you declare the value for the trigger, but you also explicitly declare the operator needed by the trigger. If you exclude the operator, the expression will be incomplete and the system cannot accurately match the trigger. This field must be surrounded by double quotes.</p>
        <p>When specifying the value to use in a trigger, notice the value's type in the data model. In the example above, the value of <code>dimensions.height</code> is an integer. So the value of <code>6</code> is not surrounded by quotes but the whole expression is. If the triggering field is defined is a string or date string, you must use single quotes around the value. For example, a trigger that alerts on a rectangle of the color BLUE would be defined as:</p>
        <p class="Indent"><code>{"color":"='BLUE'"}</code>
        </p>
        <p> The trigger value of <code>BLUE </code>is enclosed in single quotes, indicating that it is a string. Also, the value is in all upper case, since the handling of strings is case sensitive.</p>
        <h2 class="Heading2">Numerical operators</h2>
        <p>Definitions can trigger alerts with an AND or an OR condition, depending on how the definition is configured:</p>
        <ul>
            <li value="1">An AND condition occurs  if trigger X AND trigger Y are both present</li>
            <li value="2"> An OR condition occurs if trigger X OR trigger Y is present</li>
        </ul>
        <p>To configure an <b>OR </b>definition, specify an array of possible triggers.  Note that when using an array, the entire array must be enclosed in [ ] brackets, and each possible trigger must be separated by commas.  For example, to define an alert that triggers if the width is 5 OR the height is 6, create an array of definitions that match these cases:</p>
        <p class="Indent"><code>{"dimensions":["width":"=5","height":"=6"]}</code>
        </p>
        <p>The filter includes two separate JSON strings. </p>
        <p>To create an <b>AND </b>condition, combine these two JSON strings into one string. For example, to trigger when the width is 5 AND the height is 6:</p>
        <p class="Indent"><code>{"dimensions":{"width":"=5","height":"=6"}}</code>
        </p>
        <p>If you want to alert on rectangles with a width of 5, 7, OR 9, it would be advantageous to use a notation that is closer in format to that of the data model:</p>
        <p class="Indent"><code>{"dimensions":[{"width":"=5"},{"width":"=7"},{"width":"=9"}]}</code>
        </p>
        <p>This example uses the array notation to indicate an OR situation, but it is only referencing one specific field in the model.</p>
        <p>Besides equivalence, there are <b>other numeric operators</b> to define a filter:</p>
        <p class="Indent">
            <table class="TableStyle-Basic" style="mc-table-style: url('../resources/tablestyles/basic.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                <col style="width: 1in;" class="TableStyle-Basic-Column-Column1" />
                <col style="width: 2.75in;" class="TableStyle-Basic-Column-Column1" />
                <thead>
                    <tr class="TableStyle-Basic-Head-Header1">
                        <th class="TableStyle-Basic-HeadE-Column1-Header1">Operator</th>
                        <th class="TableStyle-Basic-HeadD-Column1-Header1">Meaning</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-Basic-Body-Body1">
                        <td class="TableStyle-Basic-BodyE-Column1-Body1">&gt;</td>
                        <td class="TableStyle-Basic-BodyD-Column1-Body1">Greater than</td>
                    </tr>
                    <tr class="TableStyle-Basic-Body-Body1">
                        <td class="TableStyle-Basic-BodyE-Column1-Body1">&gt;=</td>
                        <td class="TableStyle-Basic-BodyD-Column1-Body1">Greater than or equal to</td>
                    </tr>
                    <tr class="TableStyle-Basic-Body-Body1">
                        <td class="TableStyle-Basic-BodyE-Column1-Body1">&lt;</td>
                        <td class="TableStyle-Basic-BodyD-Column1-Body1">Less than</td>
                    </tr>
                    <tr class="TableStyle-Basic-Body-Body1">
                        <td class="TableStyle-Basic-BodyE-Column1-Body1">&lt;=</td>
                        <td class="TableStyle-Basic-BodyD-Column1-Body1">Less than or equal to</td>
                    </tr>
                    <tr class="TableStyle-Basic-Body-Body1">
                        <td class="TableStyle-Basic-BodyB-Column1-Body1">!=</td>
                        <td class="TableStyle-Basic-BodyA-Column1-Body1">Not equal to</td>
                    </tr>
                </tbody>
            </table>
        </p>
        <p>  <![CDATA[ ]]></p>
        <p>For example, to find rectangles with a width greater than 5:</p>
        <p class="Indent"><code>{"dimensions":{"width":"&gt;5"}}</code>
        </p>
        <h2 class="Heading2">String operators</h2>
        <p>In addition to the numerical operators, there are operators for strings:</p>
        <ul>
            <li value="1">LIKE</li>
            <li value="2">IN</li>
            <li value="3">@</li>
        </ul>
        <p>Use the <b>LIKE&#160;</b>operator to match a regular expression.  For example, to find a rectangle that matches all the colors that begin with BLUE: BLUE, BLUE-GREEN, BLUE-ISH, BLUETIFUL, use the LIKE operator:</p>
        <p class="Indent"><code>{"color":"LIKE 'BLUE*'"}</code>
        </p>
        <p>Notice the syntax: a space follows the LIKE operator, and the wildcard character is within the single quotes of the string value.</p>
        <p> The <b>IN </b>operator triggers an alert if a value matches any value in a list of trigger specifications. This is another way to create an OR situation. For example, to alert on rectangles that are only primary colors, you could use an OR array, or you could use the IN operator:</p>
        <p class="Indent"><code>{"color":"IN ('RED','BLUE','YELLOW')"}</code>
        </p>
        <p>Notice the syntax: a space follows the IN operator, the list of possible values is comma-separated and enclosed in parentheses, and each possible string is enclosed in single quotes. However, remember that a number does <i>not </i>require single quotes.</p>
        <p>The <b>@ </b>operator specifies other fields within the data model as values in the expression. Use the @ operator to compare values in two fields of the same data type. For example, to alert when the rectangle is a square, you would define a trigger when the height = width:</p>
        <p class="Indent"><code>{"dimensions":{"height":"='@dimensions.width'"}}</code>
        </p>
        <p>The @ operator will plug in the data value from the <code>dimensions.width</code> field and test it against the <code>dimensions.height</code> field. Notice the syntax: the combination of the @ symbol and the field name must be included in single quotes, even if the value of the resulting substitution is <i>not </i>a string.</p>
        <h2 class="Heading2">Wildcard characters</h2>
        <p>Use wildcard characters to match on one or more unspecified characters. There are two wildcards available:</p>
        <ul>
            <li value="1">? = single character wildcard </li>
            <li value="2">* = multiple characters wildcard</li>
        </ul>
        <p>For example: </p>
        <p class="Indent"><code>{"color":"='BLU*'"}</code>
        </p>
        <h2 class="Heading2">Examples</h2>
        <p>Here are more sample definitions from other data models:</p>
        <p class="Indent"><code>"[{"networkData":{"source":{"dshield":"LIKE '*'"}}},{"networkData":{"destination": {"dshield":"LIKE '*'"}}}]"</code>&gt;</p>
        <p class="Indent"><code>"{"arcsightHeader":{"severity":" IN ('High','Very-High')"}}"</code>
        </p>
        <p class="Indent"><code>"{"order":{"orderPrice":"&gt;350000.0"},"D_supplierNation":{"nationName":"IN ('IRAQ','IRAN')"}}"</code>
        </p>
        <p class="Indent"><code>"{"D_eventType":{"eventType":"= 'Flight'"},"geoList":[{"geoCity":"LIKE 'Kahului*'"}]}"</code>
        </p>
        <p class="Indent"><code>"{"order":{"clerk":"='Clerk#000000042'"}}"</code>
        </p>
        <p class="Indent"><code>"{"D_customer":{"customerName":"LIKE 'Customer#0000000*'"}}"</code>
        </p>
        <p class="Indent"><code>"{"BranchID":"!= '@LastTransaction.BranchID'"}"</code>
        </p>
        <p class="Indent"><code>"[{"networkData":{"source":{"network":{"network":"='Unregistered Network'"}}}}, {"networkData":{"destination":{"network":{"network":"='Unregistered Network'"}}}}]"</code>
        </p>
        <p class="Indent"><code>"{"eventType":"='Checkpoint'"}"</code>
        </p>
        <p class="Indent"><code>"{"Teller": {"Name":"='@Account.Name'"} }"</code>
        </p>
        <p class="Front">&#160;</p>
        <p class="Front">&#160;</p>
        <p class="FooterNonPrint">For  Technical Support, contact: <span class="VariablesEmail">DigitalEdgeSupport@Leidos.com</span></p>
        <p class="FooterNonPrint">To submit ideas or feedback, go to https://www9.v1ideas.com/digitaledge/welcome</p>
        <p class="FooterNonPrint">© <span class="VariablesCompanyName">Leidos</span>. All rights reserved</p>
    </body>
</html>