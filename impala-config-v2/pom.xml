<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>impala-config-v2</artifactId>
	<parent>
		<groupId>com.deleidos</groupId>
		<artifactId>parent</artifactId>
		<version>1.3.0-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>
	<repositories>
		<repository>
			<id>com.cloudera.repository.maven.release</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-scripts</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${basedir}/target/scripts</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>filter-deb-control-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/deb</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>fixcrlf</id>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- Dos2Unix -->
								<fixcrlf srcdir="${project.build.directory}/scripts"
									includes="**/*" eol="lf" eof="remove" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/cluster/*</exclude>
						<exclude>**/*.class</exclude>
					</excludes>
				</configuration>				
			</plugin>
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>0.10</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<deb>${project.build.directory}/${project.artifactId}.[[extension]]</deb>
							<controlDir>${project.build.directory}/control</controlDir>
							<installDir>/usr/local/${project.artifactId}-${project.version}</installDir>
							<dataSet>								
								<data>
									<src>${project.build.directory}/scripts</src>
									<type>directory</type>
									<mapper>
										<type>perm</type>
										<prefix>${deb.install.prefix}</prefix>
										<filemode>500</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
								<data>
									<src>${project.build.directory}/classes/default</src>
									<type>directory</type>
									<mapper>
										<type>perm</type>
										<prefix>${deb.install.prefix}/default</prefix>
										<filemode>444</filemode>
										<user>root</user>
										<group>root</group>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.deleidos</groupId>
				<artifactId>plugins</artifactId>
				<version>${project.version}</version>
				<configuration>
					<baseDirectory>${basedir}</baseDirectory>
					<commonsSystemsDir>${storage.plugin.commonsSystemsDir}</commonsSystemsDir>
					<storageInterfaceConfig>${storage.plugin.storageInterfaceConfig}</storageInterfaceConfig>
					<releaseArtifact>${project.artifactId}.deb</releaseArtifact>
					<releaseStoragePath>${storage.plugin.releasePath}</releaseStoragePath>
					<configurationStoragePath>${storage.plugin.configPath}</configurationStoragePath>
					<bucketName>${storage.plugin.bucketName}</bucketName>
				</configuration>
				<executions>
					<execution>
						<id>copying-artifact-to-s3-${project.artifactId}.deb</id>
						<phase>deploy</phase>
						<goals>
							<goal>storage-plugin</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<properties>
		<deb.install.prefix>/usr/local/${project.artifactId}-${project.version}</deb.install.prefix>
	</properties>
	<name>Impala Cluster Configuration/Installation (CDH4.x)</name>
	<description>This project centeralizes the configuration, and installation of sed configuration, for Impala based on the CDH4 compatible distribution.</description>
</project>
