CREATE TABLE IF NOT EXISTS APPLICATION.REGISTRATION
(
   UUID varchar(255) PRIMARY KEY NOT NULL,
   EMAIL_ADDRESS varchar(255) NOT NULL,
   STATUS varchar(255) NOT NULL
)
;

CREATE TABLE IF NOT EXISTS APPLICATION.IAAS_ACCOUNTS(
    ACCOUNT_ID						NUMBER			NOT NULL,
    ACCOUNT_NAME					VARCHAR2(255)	NOT NULL,
    DESCRIPTION						VARCHAR2(512)	NOT NULL,
    IAAS_SERVICE_NAME   			VARCHAR2(64)	NOT NULL,
    IAAS_SERVICE_NUMBER 			VARCHAR2(255),
    KEYPAIR_NAME					VARCHAR2(255)	NOT NULL,
    ANCHOR_INSTANCE_ID				VARCHAR2(255),
    AWS_ACCOUNT_EMAIL				VARCHAR2(64)	NOT NULL,
    DOMAIN_NAME_SUFFIX				VARCHAR2(255)	NOT NULL,
    EULA_ACCEPTED_TIMESTAMP			TIMESTAMP,
    LICENSE_EXPIRATION_TIMESTAMP	TIMESTAMP,
    VPC_ONLY						CHAR(1)			NOT NULL,

    CONSTRAINT ACCOUNT_ID_PK PRIMARY KEY (ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.IAAS_ACCOUNT_LIMITS (
    ACCOUNT_ID						NUMBER	NOT NULL UNIQUE,
    USED_INSTANCES					NUMBER	NOT NULL DEFAULT 0,
    MAX_INSTANCES					NUMBER	NOT NULL DEFAULT 20,
    FOREIGN KEY (ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID)
    
);

CREATE TABLE IF NOT EXISTS APPLICATION.GATEWAY_ACCOUNTS(
	ACCOUNT_ID				NUMBER			NOT NULL,
	INSTANCE_ID				VARCHAR2(64),
	PUBLIC_DNS				VARCHAR2(255),
	REGION					VARCHAR2(64),
	REGISTRATION_TIMESTAMP	TIMESTAMP,
	AZONE					VARCHAR2(64),

	CONSTRAINT ACCOUNT_ID_FK FOREIGN KEY(ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID),
	CONSTRAINT GA_NAMING UNIQUE (ACCOUNT_ID, REGION) 
);

CREATE TABLE IF NOT EXISTS APPLICATION.VPC_NETWORK(
	ACCOUNT_ID				NUMBER			NOT NULL,
	VPC_ID					VARCHAR2(64),
	INTERNET_GATEWAY_ID		VARCHAR2(64),
	PUBLIC_SUBNET_ID		VARCHAR2(64),
	PRIVATE_SUBNET_ID 		VARCHAR2(64),
    NAT_INSTANCE_ID 		VARCHAR2(64),
	
	CONSTRAINT VPC_ACCOUNT_ID_FK FOREIGN KEY(ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID),
);

CREATE TABLE IF NOT EXISTS APPLICATION.TENANT_ACCOUNT_ACCESS(
    TENANT_ID			VARCHAR2(255)	NOT NULL,
    ACCOUNT_ID			NUMBER			NOT NULL,
    CONSTRAINT TENANT_ACCESS_UNIQUE UNIQUE (TENANT_ID) 
);


CREATE TABLE IF NOT EXISTS APPLICATION.CURRENT_DEFAULTS(
    IAAS_SERVICE_NAME	VARCHAR2(64)	NOT NULL,
    IAAS_REGION         VARCHAR2(64)	NOT NULL,
    IAAS_AZONE			VARCHAR2(64)	NOT NULL,
    SW_VERSION_ID       VARCHAR2(64)	NOT NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION.IAAS_CONFIGURATION(
    IAAS_SERVICE_NAME	   VARCHAR2(64)		NOT NULL PRIMARY KEY,
    DESCRIPTION            VARCHAR2(512),
    SERVICE_INTERFACE_XML  VARCHAR2(4000)	NOT NULL,
    INTERNET_DNS_XML       VARCHAR2(4000),
    STORAGE_INTERFACE_XML  VARCHAR2(4000)
);

CREATE TABLE IF NOT EXISTS APPLICATION.AVAILABILITY_ZONES(
    IAAS_SERVICE_NAME		VARCHAR2(64)	NOT NULL,
    IAAS_REGION				VARCHAR2(64)	NOT NULL,
    IAAS_AZONE				VARCHAR2(64)	NOT NULL,
    IAAS_SW_BUCKET			VARCHAR2(64),
    DESCRIPTION				VARCHAR2(512),
    PROPERTIES_FILE			VARCHAR2(64)	NOT NULL,
    STORAGE_ENDPOINT		VARCHAR2(256)	NOT NULL,
    SERVICE_ENDPOINT		VARCHAR2(256)	NOT NULL,
    CONSTRAINT AZ_NAMING UNIQUE (IAAS_SERVICE_NAME, IAAS_REGION, IAAS_AZONE) 
);

CREATE TABLE IF NOT EXISTS APPLICATION.SOFTWARE_RELEASES(    
    SW_VERSION_ID       VARCHAR2(64)	NOT NULL UNIQUE,
    DESCRIPTION			VARCHAR2(512),
    RELEASE_NOTES_URL	VARCHAR2(1024)
);

CREATE TABLE IF NOT EXISTS APPLICATION.MACHINE_IMAGES(
    IAAS_SERVICE_NAME	VARCHAR2(64),
    IAAS_REGION			VARCHAR2(64),
    SW_VERSION_ID		VARCHAR2(64),
    TENANT_ID			VARCHAR2(255),
    MI_64BIT_INSTANCE	VARCHAR2(32),
    CONSTRAINT MI_NAMING UNIQUE (IAAS_SERVICE_NAME, IAAS_REGION, SW_VERSION_ID, TENANT_ID) 
);

CREATE TABLE IF NOT EXISTS APPLICATION.SYSTEM_SIZING(
    SYSTEM_SIZE					VARCHAR2(32)	NOT NULL PRIMARY KEY,
    JMS_INSTANCE_COUNT			NUMBER			NOT NULL,
    JMS_INSTANCE_TYPE			VARCHAR(32)		NOT NULL,
    COMBINE_INT_EXT_JMS_FLAG	CHAR(1)			NOT NULL,
    BASE_MIN					NUMBER			NOT NULL,
    BASE_MAX					NUMBER			NOT NULL,
    BASE_ALLOC					NUMBER			NOT NULL,
    BASE_DEALLOC				NUMBER			NOT NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION.INSTANCE_TYPES(
    INSTANCE_TYPE	VARCHAR2(32)	NOT NULL PRIMARY KEY,
    NUM_BITS        NUMBER			NOT NULL,
    NUM_CORES       NUMBER			NOT NULL,
    MEMORY_MB		NUMBER			NOT NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION.PROCESS_GROUP_CONFIG(
    PROCESS_GROUP_NAME		VARCHAR2(255)	NOT NULL,
    SECURITY_GROUP			VARCHAR2(255)	NOT NULL,
    INTERNAL_DOMAIN_NAME	VARCHAR2(255)	NOT NULL,
    MANAGEMENT_INTERFACES	VARCHAR2(255),
    PUBLIC_DOMAIN_NAME		VARCHAR2(255),
    DEFAULT_INSTANCE_TYPE	VARCHAR2(32)	NOT NULL,
    INSTANCE_STORAGE		VARCHAR2(64)	NOT NULL,
    FIXED_WEBAPPS			VARCHAR2(1024),
    MANIFEST_FILENAME		VARCHAR2(255)	NOT NULL,
    INGEST_CONFIG_FILENAME	VARCHAR2(255),
    CONFIG_PERMISSIONS		VARCHAR2(4000)  NOT NULL,
    OWNER					VARCHAR2(255) NOT NULL,
    VISIBILITY				VARCHAR2(8) NOT NULL,
    CONTAINER_PORT_EXPOSE	VARCHAR2(255),
    CONTAINER_PORT_EXPOSE_HOST	VARCHAR2(255),
    SERVICE_ENABLED         BOOLEAN,
    PRIMARY KEY (PROCESS_GROUP_NAME,OWNER),
    FOREIGN KEY (OWNER) REFERENCES APPLICATION.TENANT_ACCOUNT_ACCESS(TENANT_ID)
);


CREATE TABLE IF NOT EXISTS APPLICATION.DATASINK_CONFIG(
	FQN							VARCHAR2(512)	NOT NULL PRIMARY KEY,
	CAN_AUTOSCALE				CHAR(1)			NOT NULL,
	USES_BLOCK_STORAGE          CHAR(1)         NOT NULL,
	SCALE_UP_FACTOR             NUMBER          NOT NULL,
	PROCESS_GROUP_DEPENDENCIES	VARCHAR2(4000),
	NUM_THREADS					NUMBER DEFAULT 2
);

CREATE TABLE IF NOT EXISTS APPLICATION.WEBAPPS_CONFIG(
	FQN						VARCHAR2(512)	NOT NULL PRIMARY KEY,
	TYPE                    VARCHAR2(32)    NOT NULL,
	DESCRIPTION				VARCHAR2(512),
	WEBAPPS_DEPENDENCIES	VARCHAR2(4000),
	DATASINK_DEPENDENCIES	VARCHAR2(4000)
);

/* DIMENSION-MANAGEMENT TABLES */
CREATE TABLE IF NOT EXISTS APPLICATION.TENANT_RDBMS_CONNECTIONS(
	CONN_ID NUMBER NOT NULL PRIMARY KEY,
	TENANT_ID VARCHAR2(255)	NOT NULL,
	DB_TYPE VARCHAR2(128) NOT NULL,
	HOST VARCHAR2(512) NOT NULL,
	PORT NUMBER NOT NULL,
	DB_NAME VARCHAR2(512) NOT NULL,
	LABEL VARCHAR2(512) NOT NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION.DIM_TABLES(
	DIM_TABLE_ID NUMBER	NOT NULL PRIMARY KEY,
  CONN_ID NUMBER NOT NULL,
  TABLE_NAME VARCHAR2(512) NOT NULL,
  SURROGATE_KEY_SEQUENCE_NAME VARCHAR2(512),
  MISS_POLICY VARCHAR2(128) NOT NULL,
  DEFAULT_CACHE_INIT_POLICY VARCHAR2(128),
  DEFAULT_CACHE_MAX_RECORDS NUMBER,
  CONSTRAINT DIM_TABLE_NK UNIQUE (CONN_ID, TABLE_NAME),
  CONSTRAINT CONN_ID_FK FOREIGN KEY(CONN_ID) REFERENCES APPLICATION.TENANT_RDBMS_CONNECTIONS(CONN_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.DIM_COLUMNS(
	DIM_COLUMN_ID NUMBER	NOT NULL PRIMARY KEY,
	DIM_TABLE_ID NUMBER	NOT NULL,
	COLUMN_NAME VARCHAR2(512) NOT NULL,
	DIM_ROLE VARCHAR2(128),
	DEFAULT_VALUE VARCHAR2(512),
	FIELD_NAME VARCHAR2(512),
	FIELD_TYPE VARCHAR2(256),
	FORMAT_MASK VARCHAR2(256),
	CONSTRAINT DIM_COLUMN_NK UNIQUE (DIM_TABLE_ID, COLUMN_NAME),
  CONSTRAINT DIM_TABLE_ID_FK FOREIGN KEY (DIM_TABLE_ID) REFERENCES APPLICATION.DIM_TABLES(DIM_TABLE_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.ADMIN_EMAIL_CONFIG (
    ACCOUNT_ID				DECIMAL			NOT NULL,
    SERVICE					VARCHAR(8)		NOT NULL,
    EMAIL_FROM				VARCHAR(254)	NOT NULL,
    HOST					VARCHAR(255),
    PORT					NUMBER,
    USER					VARCHAR(254),
    USER_PASSWORD			VARCHAR(254),
    IS_AUTH_REQUIRED		BOOLEAN,
    IS_TLS_REQUIRED			BOOLEAN,
    CONSTRAINT EMAIL_CONFIG_ACCOUNT_ID_FK FOREIGN KEY (ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.SYSTEM_USAGE (
	 ACCOUNT_ID						NUMBER NOT NULL,
	 WBS_CODE						VARCHAR(512),
	 DOMAIN							VARCHAR(512) NOT NULL,
	 SNAPSHOT				        TIMESTAMP NOT NULL,
	 ALLOCATED_CORES				NUMBER NOT NULL,	 
	 ALLOCATED_EBS					FLOAT NOT NULL DEFAULT 0.0,
	 FOREIGN KEY (ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID),
	 PRIMARY KEY (SNAPSHOT,DOMAIN)
);

CREATE TABLE IF NOT EXISTS APPLICATION.SYSTEM_USAGE_SUMMARY (
	 ACCOUNT_ID						NUMBER NOT NULL,
	 WBS_CODE						VARCHAR(512),
	 DOMAIN							VARCHAR(512) NOT NULL,
	 DAY							DATE NOT NULL,
	 HOUR							NUMBER NOT NULL,
	 ALLOCATED_CORES				NUMBER NOT NULL,
	 ALLOCATED_EBS					FLOAT NOT NULL DEFAULT 0.0,
	 FOREIGN KEY (ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.SYSTEM_CHAINS (
	 NAME							VARCHAR(512) NOT NULL,
	 ACCOUNT_ID						NUMBER NOT NULL,
	 DOMAIN							VARCHAR(512) NOT NULL,
	 REGION							VARCHAR2(64),
	 CFG_VERSION					VARCHAR2(64) NOT NULL,
	 POSITION						NUMBER NOT NULL,
	 FOREIGN KEY (ACCOUNT_ID) REFERENCES APPLICATION.IAAS_ACCOUNTS(ACCOUNT_ID)
);

CREATE TABLE IF NOT EXISTS APPLICATION.SYSTEM_CHAINS_CURRENT_POSITION (
	 NAME							VARCHAR(512) NOT NULL,
	 ACCOUNT_ID						NUMBER NOT NULL,
	 POSITION						NUMBER NOT NULL
);

CREATE TABLE IF NOT EXISTS APPLICATION.CONTAINER_CREATION_QUEUE (
	 DOMAIN							VARCHAR(512) NOT NULL,
	 SW_VERSION_ID       			VARCHAR2(64)	NOT NULL,
	 FOREIGN KEY (SW_VERSION_ID) REFERENCES APPLICATION.SOFTWARE_RELEASES(SW_VERSION_ID),
	 IN_PROGRESS					BOOLEAN DEFAULT FALSE,
	 PRIMARY KEY (DOMAIN,SW_VERSION_ID)
);